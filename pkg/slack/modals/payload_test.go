package modals_test

import (
	"encoding/json"
	"errors"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/slack-go/slack"

	"github.com/openshift/ci-chat-bot/pkg/slack/modals"
	"github.com/openshift/ci-chat-bot/pkg/slack/modals/bug"
	"github.com/openshift/ci-chat-bot/pkg/slack/modals/consultation"
	"github.com/openshift/ci-chat-bot/pkg/slack/modals/enhancement"
	"github.com/openshift/ci-chat-bot/pkg/slack/modals/helpdesk"
	"github.com/openshift/ci-chat-bot/pkg/slack/modals/incident"
	"github.com/openshift/ci-chat-bot/pkg/slack/modals/triage"
)

func TestModals(t *testing.T) {
	// the raw JSON was generated by using the Slack block builder
	// online, this test verifies that the Go structs it's converted
	// into match what we want to send to the server
	var testCases = []struct {
		name     modals.Identifier
		view     slack.ModalViewRequest
		expected string
	}{
		{
			name:     helpdesk.Identifier,
			view:     helpdesk.View(),
			expected: `{"blocks":[{"text":{"text":"This feature is not yet implemented.","type":"plain_text"},"type":"section"}],"close":{"text":"Cancel","type":"plain_text"},"submit":{"text":"Submit","type":"plain_text"},"title":{"text":"Ask a Question","type":"plain_text"},"private_metadata":"helpdesk","type":"modal"}`,
		},
		{
			name:     triage.Identifier,
			view:     triage.View(),
			expected: `{"blocks":[{"text":{"text":"This feature is not yet implemented.","type":"plain_text"},"type":"section"}],"close":{"text":"Cancel","type":"plain_text"},"submit":{"text":"Submit","type":"plain_text"},"title":{"text":"Triage an Incident","type":"plain_text"},"private_metadata":"triage","type":"modal"}`,
		},
		{
			name:     bug.Identifier,
			view:     bug.View(),
			expected: `{"blocks":[{"text":{"text":"Use this form to report a bug in the test platform or infrastructure.","type":"plain_text"},"type":"section"},{"accessory":{"text":{"text":"Ask a Question","type":"plain_text"},"type":"button","value":"question"},"text":{"text":"Please be certain that what you are reporting is a bug in the system. If it's not clear, please ask a question from the Test Platform Help-Desk engineer using the question form instead.","type":"plain_text"},"type":"section"},{"type":"divider"},{"block_id":"title","element":{"type":"plain_text_input"},"label":{"text":"Provide a title for this bug:","type":"plain_text"},"type":"input"},{"block_id":"category","element":{"options":[{"text":{"text":"CI Jobs","type":"plain_text"},"value":"CI Jobs"},{"text":{"text":"CI Search","type":"plain_text"},"value":"CI Search"},{"text":{"text":"Release Controller","type":"plain_text"},"value":"Release Controller"},{"text":{"text":"Other","type":"plain_text"},"value":"Other"}],"placeholder":{"text":"Select a category...","type":"plain_text"},"type":"static_select"},"label":{"text":"What test infrastructure component is affected?","type":"plain_text"},"type":"input"},{"block_id":"optional","element":{"type":"plain_text_input"},"label":{"text":"If other, what best describes the bugged component?","type":"plain_text"},"optional":true,"type":"input"},{"type":"divider"},{"block_id":"symptom","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"What incorrect behavior did you notice?","type":"plain_text"},"type":"input"},{"block_id":"expected","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"What behavior did you expect instead?","type":"plain_text"},"type":"input"},{"block_id":"impact","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"What is the impact of this bug? How many jobs or users are impacted?","type":"plain_text"},"type":"input"},{"block_id":"reproduction","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Is this bug reproducible? If so, how?","type":"plain_text"},"type":"input"}],"close":{"text":"Cancel","type":"plain_text"},"submit":{"text":"Submit","type":"plain_text"},"title":{"text":"File a Bug","type":"plain_text"},"private_metadata":"bug","type":"modal"}`,
		},
		{
			name:     consultation.Identifier,
			view:     consultation.View(),
			expected: `{"blocks":[{"text":{"text":"When a team has complex or involved requirements from the infrastructure, the Test Platform team can provide an engineer's time to consult on how to best achieve those goals. Use this form to request a consultation.","type":"plain_text"},"type":"section"},{"accessory":{"text":{"text":"Ask a Question","type":"plain_text"},"type":"button","value":"question"},"text":{"text":"Users that wish to ask a question from the Test Platform Help-Desk engineer should use the question form instead.","type":"plain_text"},"type":"section"},{"type":"divider"},{"block_id":"title","element":{"type":"plain_text_input"},"label":{"text":"Provide a one-line summary for this consultation:","type":"plain_text"},"type":"input"},{"block_id":"requirement","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Explain your goals (what are you trying to achieve using the test platform?):","type":"plain_text"},"type":"input"},{"block_id":"previous","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Explain what you've tried already and list any documents that were helpful or insufficient:","type":"plain_text"},"type":"input"},{"block_id":"acceptance_criteria","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Provide acceptance criteria (one per line) for this consultation, focusing on what is to be achieved, not how:","type":"plain_text"},"type":"input"},{"block_id":"additional","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Provide any additional information:","type":"plain_text"},"optional":true,"type":"input"}],"close":{"text":"Cancel","type":"plain_text"},"submit":{"text":"Submit","type":"plain_text"},"title":{"text":"Request a Consultation","type":"plain_text"},"private_metadata":"consultation","type":"modal"}`,
		},
		{
			name:     incident.Identifier,
			view:     incident.View(),
			expected: `{"blocks":[{"text":{"text":"Members of the Test Platform team can use this form to document incidents and automatically create incident cards in Jira.","type":"plain_text"},"type":"section"},{"accessory":{"text":{"text":"Triage an Incident","type":"plain_text"},"type":"button","value":"triage"},"text":{"text":"Users that wish to report an ongoing incident to engage the Test Platform Triage role should use the incident report form instead.","type":"plain_text"},"type":"section"},{"type":"divider"},{"block_id":"title","element":{"type":"plain_text_input"},"label":{"text":"Provide a title for this incident:","type":"plain_text"},"type":"input"},{"block_id":"summary","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Summarize what is happening:","type":"plain_text"},"type":"input"},{"block_id":"impact","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Explain the impact:","type":"plain_text"},"type":"input"},{"block_id":"bugzilla","element":{"type":"plain_text_input"},"label":{"text":"Link the Bugzilla bug:","type":"plain_text"},"type":"input"},{"block_id":"selectors","elements":[{"placeholder":{"text":"Select the incident channel...","type":"plain_text"},"type":"channels_select"},{"placeholder":{"text":"Select the subject matter expert...","type":"plain_text"},"type":"users_select"}],"type":"actions"},{"block_id":"additional","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Provide any additional information:","type":"plain_text"},"optional":true,"type":"input"}],"close":{"text":"Cancel","type":"plain_text"},"private_metadata":"incident","submit":{"text":"Submit","type":"plain_text"},"title":{"text":"Document an Incident","type":"plain_text"},"type":"modal"}`,
		},
		{
			name:     enhancement.Identifier,
			view:     enhancement.View(),
			expected: `{"blocks":[{"text":{"text":"The Test Platform team is committed to improving the developer productivity across the OpenShift organization. Use this form to request enhancements or new features to improve your development workflows.","type":"plain_text"},"type":"section"},{"type":"divider"},{"block_id":"title","element":{"type":"plain_text_input"},"label":{"text":"Provide a title for this enhancement:","type":"plain_text"},"type":"input"},{"text":{"text":"Provide a user story.","type":"plain_text"},"type":"section"},{"block_id":"as_a","element":{"type":"plain_text_input"},"label":{"text":"As a...","type":"plain_text"},"type":"input"},{"block_id":"i_want","element":{"type":"plain_text_input"},"label":{"text":"I want...","type":"plain_text"},"type":"input"},{"block_id":"so_that","element":{"type":"plain_text_input"},"label":{"text":"So that...","type":"plain_text"},"type":"input"},{"block_id":"summary","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Provide context on why this is a need and any specifics on the requirement:","type":"plain_text"},"type":"input"},{"block_id":"impact","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Explain how many developers would be impacted by this enhancement and to what extent their workflows would be improved:","type":"plain_text"},"type":"input"},{"block_id":"acceptance_criteria","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Provide acceptance criteria (one per line) for this feature, focusing on what is to be achieved, not how:","type":"plain_text"},"type":"input"},{"block_id":"implementation","element":{"multiline":true,"type":"plain_text_input"},"label":{"text":"Provide any implementation notes:","type":"plain_text"},"optional":true,"type":"input"}],"close":{"text":"Cancel","type":"plain_text"},"submit":{"text":"Submit","type":"plain_text"},"title":{"text":"Request an Enhancement","type":"plain_text"},"private_metadata":"enhancement","type":"modal"}`,
		},
		{
			name:     modals.IdentifierError,
			view:     modals.ErrorView("doing something", errors.New("oops")),
			expected: `{"blocks":[{"text":{"text":"We encountered an error trying to doing something:\n>oops","type":"mrkdwn"},"type":"section"}],"close":{"text":"OK","type":"plain_text"},"title":{"text":"Error Occurred","type":"plain_text"},"private_metadata":"error","type":"modal"}`,
		},
	}
	for _, testCase := range testCases {
		t.Run(string(testCase.name), func(t *testing.T) {
			if string(testCase.name) != testCase.view.PrivateMetadata {
				t.Errorf("%s: identifier does not match view private metadata", testCase.name)
			}
			raw, err := json.Marshal(testCase.view)
			if err != nil {
				t.Errorf("%s: unexpected marshal error: %v", testCase.name, err)
				return
			}
			var actual interface{}
			if err := json.Unmarshal(raw, &actual); err != nil {
				t.Errorf("%s: unexpected unmarshal error: %v", testCase.name, err)
				return
			}
			var expected interface{}
			if err := json.Unmarshal([]byte(testCase.expected), &expected); err != nil {
				t.Errorf("%s: unexpected unmarshal error: %v", testCase.name, err)
				return
			}
			if diff := cmp.Diff(actual, expected); diff != "" {
				t.Errorf("%s: unexpected marshal result: %v", testCase.name, diff)
			}
		})
	}
}
